using System;

namespace GuessingGame
{
    class Program
    {
        // Declare global variable(s)
        public static Random rand = new Random();

        static void Main(string[] args)
        {
            // To keep the main function short, call StartGame() and begin the game.
            StartGame();
        }

        static void StartGame()
        {
            // Declare local StartGame() variables
            int _playAgain = 1; // If set to 0 the user doesn't want to play
            int winningNumber; // Becomes a random number generated by the Random class (library)
            int user_num_input; // Stores the users numerical guess (1-10)
            string user_input; // Used for user input from Console.ReadLine
            User gamePlayer; // User-defined class for user data/management

            // Welcome the user, prompt for their username
            Console.WriteLine("> Welcome to the Guessing Game!");
            Console.WriteLine("> ------------------------");
            Console.WriteLine("> Enter your username");

            // Take the inputted username, store it in our local varaible used for input data
            Console.Write("> ");
            user_input = Console.ReadLine();

            // Initialize User with the supplied username
            gamePlayer = new User(user_input);

            // Explain to the player/user the game prize and buy-in
            Console.WriteLine("> Okay " + gamePlayer.GetUsername() + ", you have " + gamePlayer.GetPoints() + " points.");
            Console.WriteLine("> The buy-in is 1000 points. The prize is 2000 points!");

            // If the player wants to play/play again, _playAgain will be > 0
            while (_playAgain > 0)
            {
                // Deduct the buy-in amount from the users point balance
                gamePlayer.SubtractPoints(1000);

                // Prompt user to pick a number to play
                Console.WriteLine("> Pick a number between 1-10");
                Console.Write("> ");

                // Get the users input, ensuring it is only numerical (integers), if it is, store the users guess into user_num_input
                while (!int.TryParse(Console.ReadLine(), out user_num_input))
                {
                    Console.WriteLine("> You input was invalid. Please use integers only.");
                    Console.WriteLine("> Pick a number between 1-10");
                    Console.Write("> ");
                }


                // If the users guess was < 0 or > 10, ask them to enter another number
                while (user_num_input < 0 || user_num_input > 10)
                {
                    Console.WriteLine("> You entered outside the parameter");
                    Console.WriteLine("> Enter a number 1-10");
                    Console.Write("> ");

                    user_num_input = Convert.ToInt32(Console.ReadLine());
                }

                // Get the winning (random) number from user-defined function GetRandomNumber()
                winningNumber = GetRandomNumber();

                // If the user guessed the right number, give him 2000 points and let him know
                if (user_num_input == winningNumber)
                {
                    gamePlayer.AddPoints(2000);
                    Console.WriteLine("> You won! Your balance is now: " + gamePlayer.GetPoints());
                }
                // If the user guessed the wrong number, let him know he lost
                else
                {
                    Console.WriteLine("> You lost. Your balance is now: " + gamePlayer.GetPoints());
                }

                // If the user has enough points to play again, ask him if he wants to
                if (gamePlayer.GetPoints() >= 1000)
                {
                    Console.WriteLine("> Do you want to play again?");
                    user_input = Console.ReadLine();

                    // If the user does not enter "yes" or "no, ask him if he wants to play again until he answers "yes" or "no"
                    while (user_input.ToLower() != "no" && user_input.ToLower() != "yes")
                    {
                        Console.WriteLine("> You did not enter \"yes\" or \"no\". Do you want to play again?");
                        user_input = Console.ReadLine();
                    }

                    // If the user doesn't want to play again, set _PlayAgain = 0 this will terminate the while loop
                    if (user_input.ToLower() == "no")
                    {
                        _playAgain = 0;
                    }
                    // If the user does want to play again, set _PlayAgain = 1 this will continue the while loop
                    else if (user_input.ToLower() == "yes")
                    {
                        _playAgain = 1;
                    }
                }
                // If the user doesn't have enough points to keep playing, let him know and exit the while loop
                else
                {
                    Console.WriteLine("You don't have enough points to play");
                    _playAgain = 0;
                }
            }

            // If we are here, the user did not want to keep playing or ran out of points, say goodbye.
            Console.WriteLine("Thanks for playing {0}. See you soon!", gamePlayer.GetUsername());
            // Pause the screen so the user can read the goodbye message.
            Console.ReadLine();
        }

        static int GetRandomNumber()
        {
            // Get a random number 1-10 from the Random.Next libray function
            return rand.Next(1, 10);
        }
    }
}
